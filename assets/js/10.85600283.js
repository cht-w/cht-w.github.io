(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{374:function(t,a,s){t.exports=s.p+"assets/img/duiyuzhan.cc27c929.png"},375:function(t,a,s){t.exports=s.p+"assets/img/yinyongfuzhi.bfe26cef.png"},417:function(t,a,s){"use strict";s.r(a);var n=s(42),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{attrs:{align:"center"}},[n("font",{attrs:{size:"70"}},[t._v("JS栈内存和堆内存")])],1),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"_1-js中类型的介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-js中类型的介绍"}},[t._v("#")]),t._v(" 1.JS中类型的介绍")]),t._v(" "),n("p",[n("strong",[t._v("JavaScript中的变量分为【基本类型】和【引用类型】")])]),t._v(" "),n("ol",[n("li",[t._v("JS中的基本类型就5种: Undefined Null Boolean Number String,它们都是按值之间存储在栈中。")])]),t._v(" "),n("ul",[n("li",[t._v("存放于栈内存（Stack）中")]),t._v(" "),n("li",[t._v("基本类型的值是按值访问")]),t._v(" "),n("li",[t._v("基本类型值是不可改变的 （改变的只是指针的指向）")]),t._v(" "),n("li",[t._v("基本类型的比较是它们值得比较")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("JS中的引用类型包括: Object Array Function RegExp,它们都是存储在堆内存中，栈中只是存放内存地址指针。")])]),t._v(" "),n("ul",[n("li",[t._v("引用类型的值是保存在堆内存（Heap）中的对象")]),t._v(" "),n("li",[t._v("引用类型的值是按引用访问的")]),t._v(" "),n("li",[t._v("引用类型的值是可变的")]),t._v(" "),n("li",[t._v("引用类型的比较是引用的比较")])]),t._v(" "),n("h2",{attrs:{id:"_2-代码展示于图列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-代码展示于图列"}},[t._v("#")]),t._v(" 2.代码展示于图列")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 栈")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 栈")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 栈")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 栈")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 栈")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量f 存储于 栈   [1,2,3]存储于堆")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cht'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量 obj 存储于 栈  {name:'cht'} 存储于堆")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:s(374),alt:"avatar"}})]),t._v(" "),n("p",[n("strong",[t._v("解释:")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("基本类型值存放于栈内存中，它的值不能改变，改变的是指针的指向。")])]),t._v(" "),n("li",[n("p",[t._v("引用类型的值存放于堆内存中，值指针指向存在于堆内存中。")])])]),t._v(" "),n("p",[n("strong",[t._v("访问堆内存中的数据类型的步骤：")])]),t._v(" "),n("ol",[n("li",[t._v("从栈中获取该对象的地址引用")]),t._v(" "),n("li",[t._v("再从堆内存中获取数据")])]),t._v(" "),n("h2",{attrs:{id:"_3-基本类型赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本类型赋值"}},[t._v("#")]),t._v(" 3.基本类型赋值")]),t._v(" "),n("p",[n("strong",[t._v("第一种：")])]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 200")]),t._v("\n")])])]),n("p",[n("strong",[t._v("解释：")])]),t._v(" "),n("ul",[n("li",[t._v("一个变量向另一个变量赋基本类型值，会在变量对象上创建一个新值，然后把该值复制到新变量分配的位置上。")]),t._v(" "),n("li",[t._v("赋值结束后，a 和 b 是互不影响的两个变量。")])]),t._v(" "),n("p",[n("strong",[t._v("第二种：")])]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 300")]),t._v("\n")])])]),n("p",[n("strong",[t._v("解释：")])]),t._v(" "),n("ul",[n("li",[t._v("第二种方式：单从结果上看 a 的值发生了变化。其实 a 只是指向 200 的一个指针，指针的指向是可以改变的，所以我们能够 通过 a=300 来修改 a 的指向。\n此时 a 指向了300，这里的300也是不可修改的。也就是说：我们认为的 a 的值发生了修改，只是 【指针指向的改变】")])]),t._v(" "),n("h2",{attrs:{id:"_4-引用类型的赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-引用类型的赋值"}},[t._v("#")]),t._v(" 4.引用类型的赋值")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ 1, 2, 3, 4, 5, 6 ] [ 1, 2, 3, 4, 5, 6 ]")]),t._v("\n")])])]),n("p",[n("strong",[t._v("解释：")])]),t._v(" "),n("ul",[n("li",[t._v("当一个变量向另一个变量赋引用类型值得时候，其实是复制堆内存的地址。这个地址指向的是堆内存中的对象。")]),t._v(" "),n("li",[t._v("赋值结束后，两个变量都保存了同一个堆内存的地址，所以指向同一个对象。当变量 arr 修改堆内存中的值时，两一个变量也修改。")])]),t._v(" "),n("p",[n("img",{attrs:{src:s(375),alt:"avatar"}})]),t._v(" "),n("h2",{attrs:{id:"_5-堆和栈的对比"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-堆和栈的对比"}},[t._v("#")]),t._v(" 5.堆和栈的对比")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("栈内存")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("堆内存")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("存储基础数据类型")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("存储引用数据类型")])]),t._v(" "),n("tr",[n("td",[t._v("按值访问")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("按引用访问")])]),t._v(" "),n("tr",[n("td",[t._v("存储的值大小固定")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("存储的值大小不定，可动态调整")])]),t._v(" "),n("tr",[n("td",[t._v("由系统自动分配内存空间")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("由代码进行指定分配")])]),t._v(" "),n("tr",[n("td",[t._v("空间小，运算效率高")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("空间大，运行效率相对较低")])]),t._v(" "),n("tr",[n("td",[t._v("存储的值大小固定先进后出，后进先出")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("无序存储，可根据引用直接获取")])])])]),t._v(" "),n("p",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/YMpKnUUKPPIG6FD6CGzfTg",target:"_blank",rel:"noopener noreferrer"}},[t._v("优质文章1"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://www.cnblogs.com/zhuyeshen/p/10997893.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("优质文章2"),n("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);